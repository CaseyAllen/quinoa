import @io;

module Person{


    type Role = enum{
        Salesman;
        Manager;
        Accountant;
    };

    type _ = struct{
        name : c_str;
        age  : i32;
        role : Role;
    };

    func create(name : c_str, age : int, role: Role) -> Person{

        return Person{
            name : name;
            role : role;
            age : age;
        };
    }

    func greet(person : Person){
        io::print("Hello, ");
        io::print(person.name);
        io::print("\n");
    }

}

module Example is Entry
{
    func main() -> int{
        
        // call the `create` function to instantiate a new person
        let john   = Person::create("John",   23, Person::Role::Manager);
        let bob    = Person::create("Bob",    47, Person::Role::Accountant);
        let dwight = Person::create("Dwight", 37, Person::Role::Salesman);

        Person::greet(john);
        Person::greet(bob);
        Person::greet(dwight);
        return 0;
    }
}
