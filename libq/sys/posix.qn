//
// This module is responsible for exposing the entire C posix api
//
// Reference:
// https://www.mkompf.com/cplus/posixlist.html

//



module Posix is Exported{
  

  //
  // Commonly used aliases in libc
  // nolibc/std.h
  //
  type dev_t     = u32;
  type ino_t     = u64;
  type mode_t    = u32;
  type pid_t     = i32;
  type uid_t     = u32;
  type gid_t     = u32;
  type nlink_t   = u64;
  type off_t     = i64;
  type blksize_t = i64;
  type blkcnt_t  = i64;
  type time_t    = i64;
  type cstr      = char*;

  //
  // FILE AND DIRECTORY RELATED FUNCTIONS
  //

  type FileStats = struct{
    dev     : dev_t; 
    ino     : ino_t;
    mode    : mode_t;
    nlink   : nlink_t;
    uid     : uid_t;
    gid     : gid_t;
    rdev    : dev_t;
    size    : off_t;
    blksize : blksize_t;
    blocks  : blkcnt_t;
  };

  type UTimeBuf = struct{
    access_time : time_t;
    mod_time    : time_t;
  };

  // DIR
  type Directory = struct{
      ino  : ino_t;
      name : cstr;
  };


  #[link_extern "getcwd"]
  func get_cwd(buf: cstr, buf_len: u64) -> char*;

  #[link_extern "mkdir"]
  func make_dir(path_name: cstr, mode: mode_t) -> i32;

  #[link_extern "rmdir"]
  func remove_dir(path_name: cstr) -> i32;

  #[link_extern "chdir"]
  func change_dir(path: cstr) -> i32;

  #[link_extern "link"]
  func link(old_path : cstr, new_path : cstr) -> i32;

  #[link_extern "unlink"]
  func unlink(path_name : cstr) -> i32;

  #[link_extern "rename"]
  func rename_file(old_path : cstr, new_path : cstr) -> i32;

  #[link_extern "stat"]
  func file_stat(file_name : cstr, buf : FileStats*) -> i32;

  #[link_extern "chmod"]
  func file_chmod(file_name : cstr, mode : mode_t) -> i32;

  #[link_extern "chown"]
  func file_chown(file_name : cstr, owner : uid_t, group : gid_t) -> i32;

  #[link_extern "utime"]
  func utime(file_name : cstr, buf : UTimeBuf*) -> i32;

  #[link_extern "opendir"]
  func open_dir(name : cstr) -> Directory*;

  #[link_extern "closedir"]
  func close_dir(dir : Directory*) -> i32;

  #[link_extern "rewinddir"]
  func rewind_dir(dir : Directory*);


  //
  // ADVANCED FILE OPERATIONS
  //

  #[link_extern "access"]
  func file_permissions(pathname : cstr, mode : u32) -> i32;

  #[link_extern "open"]
  func open_file(pathname : cstr, flags : u32) -> i32;

  #[link_extern "creat"]
  func create_file(pathname : cstr, mode : mode_t);

  #[link_extern "close"]
  func close_file(fd : i32) -> i32;

  #[link_extern "read"]
  func read_file(fd : i32, buffer : byte*, read_count : u64) -> i64;

  #[link_extern "write"]
  func write_file(fd : i32, buffer : byte*, write_count : u64) -> i64;

  #[link_extern "fcntl"]
  func fcntl(fd : i32, cmd : i32) -> i32;

  #[link_extern "fstat"]
  func file_stat(fd : i32, buf : FileStats*) -> i32;

  #[link_extern "lseek"]
  func file_rw_offset(fd : i32, offset : off_t, whence : i32) -> off_t;

  #[link_extern "dup"]
  func dup_file(fd : i32) -> i32;

  #[link_extern "dup2"]
  func dup_file(old_fd : i32, new_fd : i32) -> i32;

  #[link_extern "pipe"]
  func create_pipe(filedes : i32[2]) -> i32;

  #[link_extern "mkfifo"]
  func create_fifo_pipe(path_name : cstr, mode : mode_t) -> i32;

  #[link_extern "umask"]
  func umask(mask : mode_t) -> mode_t;


  // TODO: Implement the FILE struct
  /* #[link_extern "fdopen"] */
  /* func open_fd(fd : i32, mode : cstr) -> File*; */

  /* #[link_extern "fileno"] */
  /* func get_file_fd(stream : File*) -> i32; */
}
