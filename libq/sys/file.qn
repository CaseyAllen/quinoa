import @syscall;

module File is Exported{

    type _ = struct{
        fd : u32;
        is_open : bool;
    };


    func write.File(data : byte[]) -> i64{

        if(!(self.is_open)){
            return -1;
        }

        return syscall::write(self.fd, data.ptr as u64, data.len);
    }

    func close.File(){
        self.is_open = false;
        syscall::close(self.fd);
    }

    func read.File(){
    }

    func from_descriptor( fd : u32 ) -> File{
        return File{
            fd : fd;
            is_open : true;
        };
    }

}